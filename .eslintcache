[{"/home/ceci/ceci/ecommerce/src/index.js":"1","/home/ceci/ceci/ecommerce/src/App.js":"2","/home/ceci/ceci/ecommerce/src/reportWebVitals.js":"3","/home/ceci/ceci/ecommerce/src/components/NavBar/style.js":"4","/home/ceci/ceci/ecommerce/src/components/NavBar/NavBar.js":"5","/home/ceci/ceci/ecommerce/src/components/ItemListContainer/ItemListContainer.js":"6","/home/ceci/ceci/ecommerce/src/components/ItemListContainer/style.js":"7","/home/ceci/ceci/ecommerce/src/components/ItemList/ItemList.js":"8","/home/ceci/ceci/ecommerce/src/components/ItemCount/ItemCount.js":"9","/home/ceci/ceci/ecommerce/src/components/ItemCount/style.js":"10","/home/ceci/ceci/ecommerce/src/components/Item/Item.js":"11","/home/ceci/ceci/ecommerce/src/components/Item/style.js":"12","/home/ceci/ceci/ecommerce/src/components/ItemDetail/ItemDetail.js":"13","/home/ceci/ceci/ecommerce/src/components/ItemDetail/style.js":"14","/home/ceci/ceci/ecommerce/src/components/ItemDatailContainer/ItemDetailContainer.js":"15","/home/ceci/ceci/ecommerce/src/components/CartContext/CartContext.js":"16","/home/ceci/ceci/ecommerce/src/components/NavBar/CartWidget.js":"17","/home/ceci/ceci/ecommerce/src/components/Cart/Cart.js":"18","/home/ceci/ceci/ecommerce/src/components/loader-gif-style.js":"19","/home/ceci/ceci/ecommerce/src/components/ItemCount/CartCount.js":"20","/home/ceci/ceci/ecommerce/src/firebase/index.js":"21"},{"size":500,"mtime":1609955811956,"results":"22","hashOfConfig":"23"},{"size":1104,"mtime":1613997887718,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1609955811956,"results":"25","hashOfConfig":"23"},{"size":928,"mtime":1612038984657,"results":"26","hashOfConfig":"23"},{"size":1151,"mtime":1613997886350,"results":"27","hashOfConfig":"23"},{"size":2824,"mtime":1612874546588,"results":"28","hashOfConfig":"23"},{"size":449,"mtime":1612873428521,"results":"29","hashOfConfig":"23"},{"size":248,"mtime":1612874546588,"results":"30","hashOfConfig":"23"},{"size":1626,"mtime":1613998141155,"results":"31","hashOfConfig":"23"},{"size":1040,"mtime":1612873428521,"results":"32","hashOfConfig":"23"},{"size":609,"mtime":1612873428517,"results":"33","hashOfConfig":"23"},{"size":816,"mtime":1612873428517,"results":"34","hashOfConfig":"23"},{"size":884,"mtime":1613998142107,"results":"35","hashOfConfig":"23"},{"size":653,"mtime":1611698309050,"results":"36","hashOfConfig":"23"},{"size":1061,"mtime":1613997919070,"results":"37","hashOfConfig":"23"},{"size":1792,"mtime":1612873428517,"results":"38","hashOfConfig":"23"},{"size":657,"mtime":1612873428521,"results":"39","hashOfConfig":"23"},{"size":6069,"mtime":1613998027502,"results":"40","hashOfConfig":"23"},{"size":315,"mtime":1612388601127,"results":"41","hashOfConfig":"23"},{"size":788,"mtime":1612900514270,"results":"42","hashOfConfig":"23"},{"size":513,"mtime":1612874546588,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1j5dhz1",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/home/ceci/ceci/ecommerce/src/index.js",[],["93","94"],"/home/ceci/ceci/ecommerce/src/App.js",[],"/home/ceci/ceci/ecommerce/src/reportWebVitals.js",[],"/home/ceci/ceci/ecommerce/src/components/NavBar/style.js",[],"/home/ceci/ceci/ecommerce/src/components/NavBar/NavBar.js",[],"/home/ceci/ceci/ecommerce/src/components/ItemListContainer/ItemListContainer.js",["95"],"import React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getFirestore } from \"../../firebase\";\nimport ItemList from \"../ItemList/ItemList\";\nimport { LoaderGif } from \"../loader-gif-style\";\nimport { ListContainer, TextoPrincipal } from \"./style\";\n\n\nconst ItemListContainer = ({greetings}) => {\n\n    const [loading, setLoading] = useState('');\n    const [objetos, setObjetos] = useState([]);\n    const [title, setTitle] = useState(greetings);\n    const {categoryId} = useParams();\n    const db = getFirestore();\n    const listadoDB = db.collection('items');\n    const accesories = listadoDB.where('categoryId', '==', 'accesorios')\n    const hardware = listadoDB.where('categoryId', '==', 'hardware')\n\n    // Firebase\n    useEffect(()=>{\n        // If theres no filter from the params()\n        !categoryId && \n            setLoading(true);\n            listadoDB.get().then((query) => {\n                query.size === 0 && console.log('SIN RESULTADOS DESDE DB')\n                setObjetos(query.docs.map( item => {\n                    return ({id:item.id, ...item.data()})\n                }))\n            })\n            .catch((err) => alert(err))\n            .finally(() => setLoading(false));\n        ;\n\n        // If Params() = Accesorios\n        categoryId === 'Accesorios' && ( \n            accesories.get().then((q) => {\n                (q.size === 0) && console.log(\"No hay ningún Item para Accesorios\")\n                setObjetos(q.docs.map(objeto => {\n                    return ({id:objeto.id, ...objeto.data()})\n                }))  \n                setTitle(\"IT-Resources - Accesorios\")\n            })\n            .finally(()=>{\n                setLoading(false);\n            })\n        ) \n\n        // If Params() = Hardware\n        categoryId === 'Hardware' && ( \n            hardware.get().then((q) => {\n                (q.size === 0) && console.log(\"No hay ningún Item para Accesorios\")\n                setObjetos(q.docs.map(objeto => {\n                    return ({id:objeto.id, ...objeto.data()})\n                }))   \n                setTitle(\"IT-Resources - Hardware\")\n            })\n            .finally(()=>{\n                setLoading(false);\n            })\n        ) \n\n    },[categoryId])\n    \n    /*) : (\n            listadoDB.get().then((lista) => {\n                setObjetos(lista.docs.data())  \n            }).catch((error) => console.log(error)))\n            .finally(()=>{\n                setLoading(false);\n            })*/\n\n\n    return(\n        loading ? <LoaderGif /> : \n            <>\n                <TextoPrincipal> {title} </TextoPrincipal>\n                <ListContainer>\n                    <ItemList listaObjetos={objetos} />\n                </ListContainer>\n                \n            </>\n    )\n}\n\nexport default ItemListContainer;","/home/ceci/ceci/ecommerce/src/components/ItemListContainer/style.js",[],"/home/ceci/ceci/ecommerce/src/components/ItemList/ItemList.js",[],"/home/ceci/ceci/ecommerce/src/components/ItemCount/ItemCount.js",[],"/home/ceci/ceci/ecommerce/src/components/ItemCount/style.js",[],"/home/ceci/ceci/ecommerce/src/components/Item/Item.js",[],["96","97"],"/home/ceci/ceci/ecommerce/src/components/Item/style.js",[],"/home/ceci/ceci/ecommerce/src/components/ItemDetail/ItemDetail.js",["98"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ItemCount from \"../ItemCount/ItemCount\";\nimport { ItemDetailContainer, ItemPrecio, ItemTextContainer } from \"./style\";\n\n\nconst ItemDetail = ({item}) => {\n    \n    const { itemId } = useParams();\n\n    return(\n        <ItemDetailContainer>\n            <img src={`${item.pictureUrl}`} alt={`Imagen de ${item.title}`}/>\n            <ItemTextContainer>\n                <h2>{item.title}</h2>\n                <p>{item.description ? item.description : \"Sin descripción disponible\"}</p>\n                <ItemPrecio>Precio: $ {item.price}</ItemPrecio>\n                <ItemCount item={item}/>\n                <p>{item.stock > 0 ? `Stock disponible: ${item.stock}` : `No hay Stock disponible de este producto`}</p>\n            </ItemTextContainer>\n        </ItemDetailContainer>\n    )\n}\n\nexport default ItemDetail;","/home/ceci/ceci/ecommerce/src/components/ItemDetail/style.js",[],"/home/ceci/ceci/ecommerce/src/components/ItemDatailContainer/ItemDetailContainer.js",[],"/home/ceci/ceci/ecommerce/src/components/CartContext/CartContext.js",["99"],"import React, {useState, useEffect} from 'react';\n\nexport const CartContext = React.createContext(0);\n\nexport const Context = ({children}) => {\n    const [contador, setContador] = useState(0);\n    const [cartList, setCartList] = useState([]);\n    const [isInCartCheck, setIsInCartCheck] = useState('');\n\n    const addItem = (item, quantity) => {\n        let itemExiste = cartList.some( i => i.item.id === item.id  );\n        \n        if(!itemExiste){\n            setCartList([...cartList, {item, quantity}])\n        }else{\n            let items = cartList.map(producto => {\n                if (producto.item === item) {\n                    producto.quantity = producto.quantity + quantity;\n                    return producto;\n                  } else {\n                    return producto; // retorna los objetos que no son los duplicados\n                }\n            }); \n            setCartList(items);\n        }       \n    }\n    const removeItem = (itemToDelet) => {\n\n        cartList.forEach( (producto, i, arr) => {\n            if(producto.item.id === itemToDelet.item.id){\n                cartList.splice(i, 1);\n                setContador(contador - producto.quantity);\n                setCartList(arr);\n            }\n        })\n\n    }\n    const clearCart = () => {\n        if(cartList.length > 0){\n            setCartList([])\n            setContador(0) \n        } else alert('El carrito ya está vacío');\n    }\n    const isInCart = (id) => {\n        cartList.forEach(i => i.id === id ? setIsInCartCheck(true) : setIsInCartCheck(false));\n        return isInCartCheck\n    }\n    \n    return(\n        <CartContext.Provider value={{contador, setContador, cartList, setCartList, addItem, removeItem, clearCart, isInCart}}>\n            {children}\n        </CartContext.Provider>\n    )\n}\n\n","/home/ceci/ceci/ecommerce/src/components/NavBar/CartWidget.js",[],"/home/ceci/ceci/ecommerce/src/components/Cart/Cart.js",["100","101","102"],"import '@firebase/firestore';\nimport firebase from 'firebase/app';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { getFirestore } from \"../../firebase\";\nimport { CartContext } from \"../CartContext/CartContext\";\nimport { CardItem, CardTitle, SpanPrice } from \"../Item/style\";\nimport CartCount from \"../ItemCount/CartCount\";\nimport { ButtonShop } from \"../ItemCount/style\";\nimport { ItemDetailContainer } from \"../ItemDetail/style\";\nimport { TextoPrincipal } from \"../ItemListContainer/style\";\nimport { LoaderGif } from \"../loader-gif-style\";\n\n\nconst Cart = () => {\n    \n    \n    const { cartList, clearCart } = useContext(CartContext);\n    const [loading, setLoading] = useState(true);\n    const [order, setOrder] = useState({});\n    const [stockActual, setStockActual] = useState()\n    const [orderId, setOrderId] = useState({});\n    const [precioTotal, setPrecioTotal] = useState(0);\n    const buyerInfo = {\n        name: 'ceci',\n        phone: 1234,\n        email: 'q@q.com',\n    }\n    useEffect(()=>{\n        console.log('En useEffect, stockActual --> ', stockActual)\n    },[stockActual]);\n    \n    useEffect(()=>{\n        calcPrice()\n        setLoading(false)\n    },[cartList]);\n\n    useEffect(()=>{\n        setOrder({\n            buyer: buyerInfo,\n            items: cartList,\n            date: firebase.firestore.Timestamp.fromDate(new Date()),\n            total: precioTotal,\n        })        \n    },[precioTotal]);\n\n    function calcPrice () {\n        let price = 0;\n        cartList.forEach(e => {\n            price = price + (e.item.price * e.quantity);\n        });\n        setPrecioTotal(price.toFixed(2))\n    }\n    \n    async function handleOrder(){\n        setLoading(true)\n        const db = getFirestore();\n        const ordersDB = db.collection('orders');\n\n        if(order.items.length > 1){ \n            const itemsCarrito = order.items;\n            // Esto es método de Firebase tal cual ------\n            const itemsToUpdate =  db.collection('items').where(firebase.firestore.FieldPath.documentId(), 'in', itemsCarrito.map( i => i.item.id ));\n            // ------------------------------------------   \n            const query = await itemsToUpdate.get();\n            const batch = db.batch();\n            const outOfStock = [];\n\n            query.docs.forEach((doc, idx) => {\n                if(doc.data().stock >= itemsCarrito[idx].quantity){\n\n                    let ths = doc.data().stock;\n                    batch.update(doc.ref, { stock: ths - itemsCarrito[idx].quantity})\n\n                } else {\n                    outOfStock.push({...doc.data(), id: doc.item.id})\n                }\n            })\n            \n            if (outOfStock.length === 0){\n                \n                await batch.commit();\n                setLoading(false);\n                alert('Compra realizada con éxito');\n                clearCart();\n\n            } else { alert('No hay suficiente Stock')}\n\n\n        } else {\n            ordersDB.add(order)\n            .then((doc) => {\n                setOrderId(doc.id)\n                \n                doc.get().then((arrDoc) => {\n                    arrDoc.data().items.forEach( (i) => {\n                        \n                        let qtyToReduce = i.quantity;\n                        let docActual = db.collection('items').doc(i.item.id);\n                        docActual.get().then( d => \n                            setStockActual(d.data().stock)\n                        );\n                        docActual.update({\n                            stock: stockActual - qtyToReduce\n                        })           \n                    })\n                })\n            })\n            .catch((e)=>{console.log('No funciono el add.order',e)})\n            .finally(()=> setLoading(false))\n        }        \n    }\n\n\n    return(\n        loading ? <LoaderGif /> \n        : \n        <ItemDetailContainer style={{flexDirection: 'column', height: \"auto\"}}>\n            \n            {cartList.length < 1 \n                \n                ?\n                    <>\n                        <TextoPrincipal style={{fontWeight:'400'}} >Aún no hay ningún ítem seleccionado</TextoPrincipal> \n                        <Link to={'/'}><ButtonShop>Buscar productos</ButtonShop></Link>\n                    </>\n                \n                : \n                    <>\n                        <div style={{display:'flex', justifyContent: 'space-between'}}>\n                        {cartList && cartList.map( (e,i) => (\n                            \n                            <CardItem key={i} style={{margin: '20px 15px', position: 'relative', justifyContent: 'center'}}>\n\n                                <CartBubble>{ e.quantity }</CartBubble>\n                                <CardTitle>{e.item.title}</CardTitle>\n                                <img src={e.item.pictureUrl} alt='' />\n                                <SpanPrice>{`$ ${e.item.price}`}</SpanPrice>\n                                <CartCount item={e} calcPrice={calcPrice}/> \n                                \n                            </CardItem>  \n\n                        ))}\n                        </div>\n                        <SpanPrice>Importe total de la compra: <span style={{fontWeight:'700'}}>$ {precioTotal}</span></SpanPrice>\n                        <ButtonShop onClick={handleOrder} style={{maxWidth: '150px'}}>Confirmar Compra</ButtonShop>\n                        <ButtonShop onClick={clearCart} style={{maxWidth: '150px'}}>Vaciar carrito</ButtonShop>\n                    </>\n            }\n\n        </ItemDetailContainer>\n        \n    )\n}\n\nconst CartBubble = styled.div`\n    width: 50px;\n    height: 50px;\n    display: flex;\n    background-color: #ed4172;\n    color: white;\n    font-size: 22px;\n    font-weight: 700;\n    position: absolute;\n    border-radius: 100%;\n    top: -15px;\n    line-height: 0;\n    padding: 0 !important;\n    right: -15px;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport default Cart;","/home/ceci/ceci/ecommerce/src/components/loader-gif-style.js",[],"/home/ceci/ceci/ecommerce/src/components/ItemCount/CartCount.js",["103","104","105","106","107","108","109","110","111","112","113","114","115"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { CartContext } from \"../CartContext/CartContext\";\nimport { ButtonAddSurp, ButtonShop, ItemCartButton, ItemCountDiv } from \"./style\";\n\n\n\nconst CartCount = ({item, calcPrice}) => {\n    const [valorSeleccionado, setValorSeleccionado] = useState(item.quantity);\n    const {contador, setContador, cartList, setCartList, addItem, removeItem, clear, isInCart} = useContext(CartContext);\n\n    return(\n\n        <ItemCartButton>\n            <ButtonAddSurp \n            style={{width:'100%'}}\n            onClick={()=>{\n                removeItem(item)\n                calcPrice()\n                }}>Eliminar</ButtonAddSurp>\n        </ItemCartButton>\n\n    )\n}\n\nexport default CartCount;","/home/ceci/ceci/ecommerce/src/firebase/index.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":63,"column":7,"nodeType":"122","endLine":63,"endColumn":19,"suggestions":"123"},{"ruleId":"116","replacedBy":"124"},{"ruleId":"118","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":9,"column":13,"nodeType":"128","messageId":"129","endLine":9,"endColumn":19},{"ruleId":"126","severity":1,"message":"130","line":1,"column":26,"nodeType":"128","messageId":"129","endLine":1,"endColumn":35},{"ruleId":"126","severity":1,"message":"131","line":23,"column":12,"nodeType":"128","messageId":"129","endLine":23,"endColumn":19},{"ruleId":"120","severity":1,"message":"132","line":37,"column":7,"nodeType":"122","endLine":37,"endColumn":17,"suggestions":"133"},{"ruleId":"120","severity":1,"message":"134","line":46,"column":7,"nodeType":"122","endLine":46,"endColumn":20,"suggestions":"135"},{"ruleId":"126","severity":1,"message":"130","line":1,"column":29,"nodeType":"128","messageId":"129","endLine":1,"endColumn":38},{"ruleId":"126","severity":1,"message":"136","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"137","line":4,"column":25,"nodeType":"128","messageId":"129","endLine":4,"endColumn":35},{"ruleId":"126","severity":1,"message":"138","line":4,"column":53,"nodeType":"128","messageId":"129","endLine":4,"endColumn":65},{"ruleId":"126","severity":1,"message":"139","line":9,"column":12,"nodeType":"128","messageId":"129","endLine":9,"endColumn":29},{"ruleId":"126","severity":1,"message":"140","line":9,"column":31,"nodeType":"128","messageId":"129","endLine":9,"endColumn":51},{"ruleId":"126","severity":1,"message":"141","line":10,"column":12,"nodeType":"128","messageId":"129","endLine":10,"endColumn":20},{"ruleId":"126","severity":1,"message":"142","line":10,"column":22,"nodeType":"128","messageId":"129","endLine":10,"endColumn":33},{"ruleId":"126","severity":1,"message":"143","line":10,"column":35,"nodeType":"128","messageId":"129","endLine":10,"endColumn":43},{"ruleId":"126","severity":1,"message":"144","line":10,"column":45,"nodeType":"128","messageId":"129","endLine":10,"endColumn":56},{"ruleId":"126","severity":1,"message":"145","line":10,"column":58,"nodeType":"128","messageId":"129","endLine":10,"endColumn":65},{"ruleId":"126","severity":1,"message":"146","line":10,"column":79,"nodeType":"128","messageId":"129","endLine":10,"endColumn":84},{"ruleId":"126","severity":1,"message":"147","line":10,"column":86,"nodeType":"128","messageId":"129","endLine":10,"endColumn":94},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'accesories', 'hardware', and 'listadoDB'. Either include them or remove the dependency array.","ArrayExpression",["150"],["148"],["149"],"no-unused-vars","'itemId' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'orderId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'calcPrice'. Either include it or remove the dependency array.",["151"],"React Hook useEffect has missing dependencies: 'buyerInfo' and 'cartList'. Either include them or remove the dependency array.",["152"],"'Link' is defined but never used.","'ButtonShop' is defined but never used.","'ItemCountDiv' is defined but never used.","'valorSeleccionado' is assigned a value but never used.","'setValorSeleccionado' is assigned a value but never used.","'contador' is assigned a value but never used.","'setContador' is assigned a value but never used.","'cartList' is assigned a value but never used.","'setCartList' is assigned a value but never used.","'addItem' is assigned a value but never used.","'clear' is assigned a value but never used.","'isInCart' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [accesories, categoryId, hardware, listadoDB]",{"range":"159","text":"160"},"Update the dependencies array to be: [calcPrice, cartList]",{"range":"161","text":"162"},"Update the dependencies array to be: [buyerInfo, cartList, precioTotal]",{"range":"163","text":"164"},[2246,2258],"[accesories, categoryId, hardware, listadoDB]",[1276,1286],"[calcPrice, cartList]",[1514,1527],"[buyerInfo, cartList, precioTotal]"]